syntax = "proto3";
package proxy;

message Queries {
    repeated string queries = 1;
    // Uuid
    bytes clientId = 2;
}

message QueryResult {
    oneof row_result {
        Error error = 1;
        ResultRows row = 2;
    }
}

message Error {
    enum ErrorCode {
        SQLError   = 0;
        TxBusy     = 1;
        TxTimeout  = 2;
        Internal   = 3;
    }

    ErrorCode code = 1;
    string message = 2;
}
message ResultRows {
    repeated Column   column_descriptions = 1;
    repeated Row      rows = 2;
}

message Value {
    bytes   data = 1;
}

message Row {
    repeated Value values = 1;
}

enum Type {
    Integer = 0;
    Blob    = 1;
    Real    = 2;
    Text    = 3;
    Null    = 4;
    Unknown = 5;
    Numeric = 6;
}

message Column {
    string          name = 1;
    optional Type   ty = 2;
}

message DisconnectMessage {
    bytes clientId = 1;
}

message Ack {}

message ExecuteResults {
    repeated QueryResult results = 1;
    enum State {
        Init = 0;
        Invalid = 1;
        Txn = 2;
    }
    /// State after executing the queries
    State state = 2;
}

service Proxy {
  rpc Execute(Queries) returns (ExecuteResults) {}
  rpc Disconnect(DisconnectMessage) returns (Ack) {}
}
