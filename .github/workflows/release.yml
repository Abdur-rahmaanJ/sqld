name: Release

on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      tag:
        description: 'Tag, branch or SHA sum to release'
        required: true
        default: 'v0.0.0'
      pre-release:
        description: 'Should this be a pre-release?'
        default: 'false'
        required: false
  push:
    branch: 'release-pipeline'
jobs:
  build:
    # Build on Linux, Windows and MacOS
    strategy:
      matrix:
        os: [ubuntu-latest]
        #os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set git to use LF
        if: matrix.os == 'windows-latest'
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - uses: actions/checkout@v3
        with:
          #ref: ${{ github.event.inputs.tag }}
          ref: 'v0.15.0'

      - uses: dtolnay/rust-toolchain@1.65.0

      - name: setup msys2 for windows
        if: matrix.os == 'windows-latest'
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: mingw-w64-x86_64-toolchain mingw-w64-x86_64-sqlite3 gcc make base-devel mingw-w64-x86_64-rust zip
          msystem: mingw64
          path-type: inherit

      - name: Build sqld (windows)
        if: matrix.os == 'windows-latest'
        run: |
          export CARGO_BIN="$(which cargo)"
          cargo build --release -Z sparse-registry
        shell: msys2 {0}

      - name: Zip artifact for deployment (windows)
        if: matrix.os == 'windows-latest'
        #run: zip sqld-${{ github.event.inputs.tag }}-${{ matrix.os }}.zip ./target/release/sqld
        run: zip sqld-v0-15.0-${{ matrix.os }}.zip ./target/release/sqld
        shell: msys2 {0}

      - name: Build sqld (linux/macos)
        if: matrix.os != 'windows-latest'
        run: |
          cargo build --release -Z sparse-registry

      - name: Zip artifact for deployment (linux/macos)
        if: matrix.os != 'windows-latest'
        #run: zip sqld-${{ github.event.inputs.tag }}-${{ matrix.os }}.zip ./target/release/sqld
        run: zip sqld-v0.15.0-${{ matrix.os }}.zip ./target/release/sqld

      - uses: actions/upload-artifact@v3
        with:
          #name: sqld-${{ github.event.inputs.tag }}-${{ matrix.os }}
          #path: sqld-${{ github.event.inputs.tag }}-${{ matrix.os }}.zip
          name: sqld-v0.15.0-${{ matrix.os }}
          path: sqld-v0.15.0-${{ matrix.os }}.zip
          retention-days: 1

  release:
    name: "Release"
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3

      - name: Display fetched artifacts
        run: ls -Rha

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          token: "${{ secrets.GH_TOKEN }}"
          body_path: RELEASE_NOTES.md
          prerelease: ${{ github.event.inputs.pre-release }}
          #tag_name: "SQLd ${{ github.event.inputs.tag }}"
          tag_name: "SQLd v0.15.0"
          generate_release_notes: true
          fail_on_unmatched_files: false
          files: |
            sqld-v0.15.0-windows-latest/*
            sqld-v0.15.0-macos-latest/*
            sqld-v0.15.0-ubuntu-latest/*

#          files: |
#            sqld-${{ github.event.inputs.tag }}-windows-latest/*
#            sqld-${{ github.event.inputs.tag }}-macos-latest/*
#            sqld-${{ github.event.inputs.tag }}-ubuntu-latest/*
